{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "basePath": "/",
  "host": "localhost:8080",
  "info": {
    "contact": {
      "email": "me@kennethreitz.org",
      "url": "https://kennethreitz.org"
    },
    "description": "A simple HTTP Request & Response Service.<br/> <br/> <b>Run locally: </b> <code>$ docker run -p 80:80 kennethreitz/httpbin</code>",
    "title": "httpbin.org",
    "version": "0.9.2-42CrunchSubset"
  },
  "x-42c-no-authentication": true,
  "paths": {
    "/base64/{value}": {
      "get": {
        "parameters": [
          {
            "default": "SFRUUEJJTiBpcyBhd2Vzb21l",
            "in": "path",
            "name": "value",
            "type": "string",
            "required": true,
            "maxLength": 1000,
            "pattern": "^[0-9a-zA-Z=]+"
          }
        ],
        "produces": [
          "text/html"
        ],
        "responses": {
          "200": {
            "description": "Decoded base64 content."
          }
        },
        "summary": "Decodes base64url-encoded string.",
        "tags": [
          "Dynamic data"
        ]
      }
    },
    "/basic-auth/{user}/{passwd}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "user",
            "type": "string",
            "required": true,
            "maxLength": 50,
            "pattern": "^[a-zA-Z_\\-\\s]+"
          },
          {
            "in": "path",
            "name": "passwd",
            "type": "string",
            "required": true,
            "minLength": 10,
            "maxLength": 64,
            "pattern": "^[a-zA-Z_\\-!$\\s]+"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful authentication.",
            "schema": {
              "$ref": "#/definitions/successful-auth"
            }
          },
          "401": {
            "description": "Unsuccessful authentication."
          }
        },
        "summary": "Prompts the user for authorization using HTTP Basic Auth.",
        "tags": [
          "Auth"
        ]
      }
    },
    "/bearer": {
      "get": {
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "maxLength": 100,
            "pattern": "^Bearer\\s[a-zA-Z_\\-\\s]+"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Sucessful authentication.",
            "schema": {
              "$ref": "#/definitions/successful-auth"
            }
          },
          "401": {
            "description": "Unsuccessful authentication."
          }
        },
        "summary": "Prompts the user for authorization using bearer authentication.",
        "tags": [
          "Auth"
        ]
      }
    },
    "/digest-auth/{qop}/{user}/{passwd}": {
      "get": {
        "parameters": [
          {
            "description": "auth or auth-int",
            "in": "path",
            "name": "qop",
            "type": "string",
            "enum": ["auth", "no-auth"],
            "required": true
          },
          {
            "in": "path",
            "name": "user",
            "type": "string",
            "required": true,
            "maxLength": 50,
            "pattern": "^[a-zA-Z_\\-\\s]+"
          },
          {
            "in": "path",
            "name": "passwd",
            "type": "string",
            "required": true,
            "minLength": 10,
            "maxLength": 64,
            "pattern": "^[a-zA-Z_\\-!$\\s]+"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Sucessful authentication."
          },
          "401": {
            "description": "Unsuccessful authentication."
          }
        },
        "summary": "Prompts the user for authorization using Digest Auth.",
        "tags": [
          "Auth"
        ]
      }
    },
    "/digest-auth/{qop}/{user}/{passwd}/{algorithm}": {
      "get": {
        "parameters": [
          {
            "description": "auth or auth-int",
            "in": "path",
            "name": "qop",
            "type": "string",
            "enum": ["auth", "no-auth"],
            "required": true
          },
          {
            "in": "path",
            "name": "user",
            "type": "string",
            "required": true,
            "maxLength": 50,
            "pattern": "^[a-zA-Z_\\-\\s]+"
          },
          {
            "in": "path",
            "name": "passwd",
            "type": "string",
            "required": true,
            "minLength": 10,
            "maxLength": 64,
            "pattern": "^[a-zA-Z_\\-!$\\s]+"
          },
          {
            "default": "MD5",
            "description": "MD5, SHA-256, SHA-512",
            "in": "path",
            "name": "algorithm",
            "type": "string",
            "enum": ["MD5, SHA-256, SHA-512"],
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Sucessful authentication."
          },
          "401": {
            "description": "Unsuccessful authentication."
          }
        },
        "summary": "Prompts the user for authorization using Digest Auth + Algorithm.",
        "tags": [
          "Auth"
        ]
      }
    },
    "/digest-auth/{qop}/{user}/{passwd}/{algorithm}/{stale_after}": {
      "get": {
        "description": "allow settings the stale_after argument.\n",
        "parameters": [
          {
            "description": "auth or auth-int",
            "in": "path",
            "name": "qop",
            "type": "string",
            "enum": ["auth", "no-auth"],
            "required": true
          },
          {
            "in": "path",
            "name": "user",
            "type": "string",
            "required": true,
            "maxLength": 50,
            "pattern": "^[a-zA-Z_\\-\\s]+"
          },
          {
            "in": "path",
            "name": "passwd",
            "type": "string",
            "required": true,
            "minLength": 10,
            "maxLength": 64,
            "pattern": "^[a-zA-Z_\\-!$\\s]+"
          },
          {
            "default": "MD5",
            "description": "MD5, SHA-256, SHA-512",
            "in": "path",
            "name": "algorithm",
            "type": "string",
            "enum": ["MD5, SHA-256, SHA-512"],
            "required": true
          },
          {
            "default": "never",
            "in": "path",
            "name": "stale_after",
            "type": "string",
            "enum": ["never", "10", "60", "300"],
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Sucessful authentication."
          },
          "401": {
            "description": "Unsuccessful authentication."
          }
        },
        "summary": "Prompts the user for authorization using Digest Auth + Algorithm.",
        "tags": [
          "Auth"
        ]
      }
    },
    "/hidden-basic-auth/{user}/{passwd}": {
      "get": {
        "parameters": [
          {
            "in": "path",
            "name": "user",
            "type": "string",
            "required": true,
            "maxLength": 50,
            "pattern": "^[a-zA-Z_\\-\\s]+"
          },
          {
            "in": "path",
            "name": "passwd",
            "type": "string",
            "required": true,
            "minLength": 10,
            "maxLength": 64,
            "pattern": "^[a-zA-Z_\\-!$\\s]+"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Sucessful authentication."
          },
          "404": {
            "description": "Unsuccessful authentication."
          }
        },
        "summary": "Prompts the user for authorization using HTTP Basic Auth.",
        "tags": [
          "Auth"
        ]
      }
    },
    "/ip": {
      "get": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The Requester's IP Address.",
            "schema": {
              "$ref": "#/definitions/ip-response"
            }
          }
        },
        "summary": "Returns the requester's IP Address.",
        "tags": [
          "Request inspection"
        ]
      }
    },
    "/user-agent": {
      "get": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The request's User-Agent header.",
            "schema": {
              "$ref": "#/definitions/ua-response"
            }
          }
        },
        "summary": "Return the incoming requests's User-Agent header.",
        "tags": [
          "Request inspection"
        ]
      }
    },
    "/uuid": {
      "get": {
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "A UUID4.",
            "schema": {
              "$ref": "#/definitions/uuid-response"
            }
          }
        },
        "summary": "Return a UUID4.",
        "tags": [
          "Dynamic data"
        ]
      }
    }
  },

  "tags": [
    {
      "description": "Testing different HTTP verbs",
      "name": "HTTP Methods"
    },
    {
      "description": "Auth methods",
      "name": "Auth"
    },
    {
      "description": "Generates responses with given status code",
      "name": "Status codes"
    },
    {
      "description": "Inspect the request data",
      "name": "Request inspection"
    },
    {
      "description": "Inspect the response data like caching and headers",
      "name": "Response inspection"
    },
    {
      "description": "Returns responses in different data formats",
      "name": "Response formats"
    },
    {
      "description": "Generates random and dynamic data",
      "name": "Dynamic data"
    },
    {
      "description": "Creates, reads and deletes Cookies",
      "name": "Cookies"
    },
    {
      "description": "Returns different image formats",
      "name": "Images"
    },
    {
      "description": "Returns different redirect responses",
      "name": "Redirects"
    },
    {
      "description": "Returns anything that is passed to request",
      "name": "Anything"
    }
  ],
  "definitions": {
    "successful-auth": {
      "type": "object",
      "required": ["authenticated", "user"],
      "properties": {
        "authenticated": {
          "type": "boolean"
        },
        "user": {
          "type": "string",
          "maxLength": 50,
          "pattern": "^[a-zA-Z_\\-\\s]"
        }
      }
    },
    "ip-response": {
      "type": "object",
      "properties": {
        "origin": {
          "type": "string",
          "maxLength": 64,
          "pattern": "^[0-9\\.]+$"
        }
      }
    },
    "ua-response": {
      "type": "object",
      "properties": {
        "user-agent": {
          "type": "string",
          "maxLength": 1000,
          "pattern": "^[0-9a-zA-Z_\\-\\/,();\\.\\s]+$"
        }
      }
    },
    "uuid-response": {
      "type": "object",
      "properties": {
        "uuid": {
          "type": "string",
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        }
      }
    }
  }
}